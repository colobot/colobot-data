# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: DATE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.11.0\n"

#. type: Title-text
#: ../scene.txt:1
#, no-wrap
msgid "Remote control #3"
msgstr "Télécommande #3"

#. type: Resume-text
#: ../scene.txt:2
#, no-wrap
msgid "Remote control a bot without using an information exchange post by using a string."
msgstr "Télécommandez un robot sans borne d'information en utilisant une simple chaîne de caractère."

#. type: ScriptName-text
#: ../scene.txt:3
#, no-wrap
msgid "Remote3"
msgstr "Remote3"

#. type: \b; header
#: ../help/help.E.txt:1
#, no-wrap
msgid "Exercice"
msgstr "Exercice"

#. type: Plain text
#: ../help/help.E.txt:2
#, no-wrap
msgid "Remote control a slave robot without using an <a object|exchange>information exchange post</a>. The robot should pass over the 6 blue crosses. You must use a <a cbot|string>string</a> to pass the orders to the slave bot. This string contains the order the slave shoud execute, for exemple <code>\"move(20)\"</code>. You can see that this is the same syntax as used in the CBOT language but we could have chosen any other syntax for exemple something like <code>\"advance=20\"</code>. The string will be a <code><a cbot|static>static</a></code> class member that will be used to communicate from the master to the slave."
msgstr "Télécommandez un robot, sans utiliser une <a object|exchange>borne d'information</a>, pour qu'il passe par les 6 croix bleues. Il faudra utiliser une seule <a cbot|string>chaîne de caractère</a> pour communiquer. Cette chaîne contiendra l'ordre à effectuer, par exemple <code>\"move(20)\"</code>. On utilise donc la même syntaxe que le langage CBOT, mais on aurait tout aussi bien pu changer complètement et utiliser <code>\"advance=20\"</code> par exemple. La chaîne de caractère sera <code><a cbot|static>static</a></code> pour communiquer directement d'un programme à un autre."

#. type: Plain text
#: ../help/help.E.txt:4
#, no-wrap
msgid "The two main actors of this exercise are:"
msgstr "Les 2 acteurs principaux de cet exercice sont:"

#. type: Bullet: '1)'
#: ../help/help.E.txt:5
#, no-wrap
msgid "The <a object|botgr>wheeled grabber</a> without an energy pack and therefore immobile. This is the master you should program so it will transmit orders to the slave."
msgstr "Un <a object|botgr>robot déménageur</a> sans pile, donc immobile. C'est lui l'émetteur que vous devez programmer."

#. type: Bullet: '2)'
#: ../help/help.E.txt:6
#, no-wrap
msgid "The slave <a object|bottr>practice bot</a> which is already programmed and just waits for orders from the master."
msgstr "Un <a object|bottr>robot d'entraînement</a> qui attend les ordres. Ce robot est déjà programmé."

#. type: \b; header
#: ../help/help.E.txt:8
#, no-wrap
msgid "The slave"
msgstr "Le robot récepteur"

#. type: Plain text
#: ../help/help.E.txt:9
#, no-wrap
msgid "First of all we must understand how the program of the slave works. The <a cbot|class>class</a> <code>exchange</code> contains the mechanism for exchaning the orders. We declare a <code><a cbot|static>static</a></code> class member <code>m_order</code> which will contain the order to be executed. The word <code>static</code> insures that the member <code>m_order</code> is shared between all instances of the <a cbot|class>class</a> exchange."
msgstr ""
"Pour commencer, il faut comprendre le programme du robot d'entraînement qui attend les ordres.\n"
"Une <a cbot|class>classe</a> <code>exchange</code> contient le mécanisme d'échange et de mémorisation des ordres. Il faut d'abord déclarer une variable <code><a cbot|static>static</a></code> appelée ici <code>global_order</code>. Cette variable contient l'ordre à effectuer. L'instruction <code>static</code> permet à tous les robots d'accéder à la même variable unique."

#. type: Plain text
#: ../help/help.E.txt:11
#, no-wrap
msgid "<c/><s/><a cbot|public>public</a> <a cbot|class>class</a> exchange"
msgstr "<c/><s/><a cbot|public>public</a> <a cbot|class>class</a> exchange"

#. type: Source code
#: ../help/help.E.txt:12
#, no-wrap
msgid ""
"{\n"
"\t<a cbot|static>static</a> <a cbot|private>private</a> <a cbot|string>string</a> m_order = \"\";"
msgstr ""
"{\n"
"\t<a cbot|static>static</a> <a cbot|private>private</a> <a cbot|string>string</a> global_order = \"\";"

#. type: Plain text
#: ../help/help.E.txt:15
#, no-wrap
msgid "<n/>The <code>put</code> method will be used by the master robot for transmitting an order. As long as the string <code>m_order</code> is not empty, the slave has not finished the order and the <code>put</code> method will return <code>false</code> and will do nothing."
msgstr "Une première méthode <code>put</code> sera utilisée par le robot émetteur pour donner un ordre. Si la chaîne n'est pas vide, cela signifie que le robot récepteur n'a pas terminé l'exécution d'un ordre. Dans ce cas, la méthode <code>get</code> ne fait rien et retourne <code>false</code>:"

#. type: Plain text
#: ../help/help.E.txt:17
#, no-wrap
msgid "<c/><s/>\t<a cbot|synchro>synchronized</a> <a cbot|bool>bool</a> put(string order)"
msgstr "<c/><s/>\t<a cbot|synchro>synchronized</a> <a cbot|bool>bool</a> put(string order)"

#. type: Source code
#: ../help/help.E.txt:18
#, no-wrap
msgid ""
"\t{\n"
"\t\tif ( m_order == \"\" )\n"
"\t\t{\n"
"\t\t\tm_order = order;\n"
"\t\t\treturn true;\n"
"\t\t}\n"
"\t\telse\n"
"\t\t{\n"
"\t\t\treturn false;\n"
"\t\t}\n"
"\t}"
msgstr ""
"\t{\n"
"\t\tif ( global_order == \"\" )\n"
"\t\t{\n"
"\t\t\tglobal_order = order;\n"
"\t\t\treturn true;\n"
"\t\t}\n"
"\t\telse\n"
"\t\t{\n"
"\t\t\treturn false;\n"
"\t\t}\n"
"\t}"

#. type: Plain text
#: ../help/help.E.txt:30
#, no-wrap
msgid "Another method <code>get</code> will be used by the slave to retrieve the orders. This method returns the string contained in <code>m_order</code> and empties it, so a new order can be accepted:"
msgstr "Une deuxième méthode <code>get</code> sera utilisée par le robot récepteur pour prendre connaissance d'un ordre à effectuer. La chaîne <code>global_order</code> est directement vidée, pour indiquer que la classe <code>exchange</code> est prête à recevoir un nouvel ordre:"

#. type: Plain text
#: ../help/help.E.txt:32
#, no-wrap
msgid "<c/><s/>\t<a cbot|synchro>synchronized</a> string get()"
msgstr "<c/><s/>\t<a cbot|synchro>synchronized</a> string get()"

#. type: Source code
#: ../help/help.E.txt:33
#, no-wrap
msgid ""
"\t{\n"
"\t\tstring ret = m_order;\n"
"\t\tm_order = \"\";\n"
"\t\treturn ret;\n"
"\t}\n"
"}"
msgstr ""
"\t{\n"
"\t\tstring ret = global_order;\n"
"\t\tglobal_order = \"\";\n"
"\t\treturn ret;\n"
"\t}\n"
"}"

#. type: Plain text
#: ../help/help.E.txt:40
#, no-wrap
msgid "The main program of the slave contains an instance of the class <code>exchange</code> called <code>list</code>."
msgstr "Le programme principal peut maintenant exister. La variable <code>list</code> est de type <code>exchange</code>, qui est une <a cbot|class>classe</a>. Il faut utiliser l'instruction <code><a cbot|new>new</a></code> pour créer immédiatement une instance."

#. type: Plain text
#: ../help/help.E.txt:42
#, no-wrap
msgid "<c/><s/><a cbot|extern>extern</a> void object::Slave3( )"
msgstr "<c/><s/><a cbot|extern>extern</a> void object::Slave3( )"

#. type: Source code
#: ../help/help.E.txt:43
#, no-wrap
msgid ""
"{\n"
"\texchange list();\n"
"\tstring   todo;"
msgstr ""
"{\n"
"\texchange list = new exchange();\n"
"\tstring   todo;"

#. type: Plain text
#: ../help/help.E.txt:47
#, no-wrap
msgid "The outer <code>while</code> loop lasts for ever. The inner <code>while</code> loop waits for an order by using the <code>get</code> method of the <code>exchange</code> class. As soon as <code>get</code> returns a non empty string, the while loop stops."
msgstr "La première boucle <code>while</code> exécute les ordres à l'infini. La deuxième boucle <code>while</code> attend un ordre en exécutant la méthode <code>get</code> de la classe <code>exchange</code>. Dès qu'un ordre contenant une chaîne non vide est reçu, la boucle est stoppée."

#. type: Plain text
#: ../help/help.E.txt:49
#, no-wrap
msgid "<c/><s/>\t<a cbot|while>while</a> ( true )"
msgstr "<c/><s/>\t<a cbot|while>while</a> ( true )"

#. type: Source code
#: ../help/help.E.txt:50
#, no-wrap
msgid ""
"\t{\n"
"\t\t<a cbot|while>while</a> ( true )\n"
"\t\t{\n"
"\t\t\ttodo = list.get();\n"
"\t\t\tif ( todo != \"\" )  break;\n"
"\t\t\twait(1);\n"
"\t\t}"
msgstr ""
"\t{\n"
"\t\t<a cbot|while>while</a> ( true )\n"
"\t\t{\n"
"\t\t\ttodo = list.get();\n"
"\t\t\tif ( todo != \"\" )  break;\n"
"\t\t\twait(1);\n"
"\t\t}"

#. type: Plain text
#: ../help/help.E.txt:58
#, no-wrap
msgid "Now we have received the order in the <code>todo</code> variable. All we have to do is execute it:"
msgstr "Il ne reste plus qu'à exécuter l'ordre reçu:"

#. type: Plain text
#: ../help/help.E.txt:60
#, no-wrap
msgid "<c/><s/>\t\tif ( <a cbot|strfind>strfind</a>(todo, \"move\") == 0 )"
msgstr "<c/><s/>\t\tif ( <a cbot|strfind>strfind</a>(todo, \"move\") == 0 )"

#. type: Source code
#: ../help/help.E.txt:61
#, no-wrap
msgid ""
"\t\t{\n"
"\t\t\tmove(<a cbot|strval>strval</a>(<a cbot|strmid>strmid</a>(todo,5)));\n"
"\t\t}\n"
"\t\tif ( strfind(todo, \"turn\") == 0 )\n"
"\t\t{\n"
"\t\t\tturn(strval(strmid(todo,5)));\n"
"\t\t}\n"
"\t}\n"
"}"
msgstr ""
"\t\t{\n"
"\t\t\tmove(<a cbot|strval>strval</a>(<a cbot|strmid>strmid</a>(todo,5)));\n"
"\t\t}\n"
"\t\tif ( strfind(todo, \"turn\") == 0 )\n"
"\t\t{\n"
"\t\t\tturn(strval(strmid(todo,5)));\n"
"\t\t}\n"
"\t}\n"
"}"

#. type: \b; header
#: ../help/help.E.txt:71
#, no-wrap
msgid "The master"
msgstr "Le robot émetteur"

#. type: Plain text
#: ../help/help.E.txt:72
#, no-wrap
msgid "In the master we write an function called <code>SendOrder</code> which will send an order to the slave:"
msgstr "Dans le robot émetteur, il est plus simple d'écrire une procédure <code>SendOrder</code> qui se charge d'envoyer un ordre au robot récepteur:"

#. type: Plain text
#: ../help/help.E.txt:74
#, no-wrap
msgid "<c/><s/>void object::SendOrder(string order)"
msgstr "<c/><s/>void object::SendOrder(string order)"

#. type: Source code
#: ../help/help.E.txt:75
#, no-wrap
msgid ""
"{\n"
"\texchange list();\n"
"\t\n"
"\twhile ( list.put(order) == false )\n"
"\t{\n"
"\t\twait(1);\n"
"\t}\n"
"}"
msgstr ""
"{\n"
"\texchange list = new exchange();\n"
"\t\n"
"\twhile ( list.put(order) == false )\n"
"\t{\n"
"\t\twait(1);\n"
"\t}\n"
"}"

#. type: Plain text
#: ../help/help.E.txt:84
#, no-wrap
msgid ""
"The <code>while</code> loop waits until a pending order has been terminated, that is the slaved has exited from the <code>get</code> method.\n"
"Now the main program of the master is very simple:"
msgstr ""
"La boucle <code>while</code> attend qu'un éventuel ordre précédent soit terminé, ce qui arrive lorsque le robot récepteur exécute la méthode <code>get</code>.\n"
"Le programme principal est finalement d'une simplicité enfantine:"

#. type: Plain text
#: ../help/help.E.txt:87
#, no-wrap
msgid "<c/><s/>extern void object::Remote3( )"
msgstr "<c/><s/>extern void object::Remote3( )"

#. type: Source code
#: ../help/help.E.txt:88
#, no-wrap
msgid ""
"{\n"
"\tSendOrder(\"move(20)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(20)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"\tSendOrder(\"turn(-90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"}"
msgstr ""
"{\n"
"\tSendOrder( \"move(20)\" );\n"
"\tSendOrder( \"turn(90)\" );\n"
"\tSendOrder( \"move(20)\" );\n"
"\tSendOrder( \"turn(90)\" );\n"
"\tSendOrder( \"move(10)\" );\n"
"\tSendOrder( \"turn(90)\" );\n"
"\tSendOrder( \"move(10)\" );\n"
"\tSendOrder( \"turn(-90)\" );\n"
"\tSendOrder( \"move(10)\" );\n"
"}"

#. type: Plain text
#: ../help/help.E.txt:100
#, no-wrap
msgid "<format key><key help/></format> show these instruction at any time."
msgstr "<format key><key help/></format> permet de revoir ces instructions sur votre SatCom."

#. type: \t; header
#: ../help/help.E.txt:102
#, no-wrap
msgid "See also"
msgstr "Voir aussi"

#. type: Plain text
#: ../help/help.E.txt:103
#, no-wrap
msgid "<a command>Controls</a> and <a cbot>programming</a>."
msgstr "<a ttable3>Exercice précédent</a> et <a cbot>programmation</a>."
