\b;Переменные
Переменная похожа на ящик, куда вы можете положить какую-то информацию. Во время выполнения программы содержимое переменной может меняться.

Например вы можете использовать переменную для того, чтобы сосчитать количество единиц титановой руды, которое сборщик собрал и отнес в переработчик. Вначале вы должны придумать для нее имя: имя должно быть не очень длинным и при этом говорить о том, для чего используется эта переменная. Давайте назовем ее \c;countTit\n;. Эта переменная может содержать только целые числа, поэтому выберем тип \c;int\n;. Переменную нужно объявить в начале программы. Затем нужно сохранить в переменной значение \c;0\n; и каждый раз, когда вы будете подбирать титановую руду, увеличивать ее значение на \c;1\n;. В каждый момент времени переменная будет содержать количество единиц титановой руды, которую собрал сборщик.

Для объявления переменной напишите следующую строку:
\c;\s;	int  countTit;\n;

Чтобы записать в переменную \c;0\n;, напишите:
\c;\s;	countTit = 0;\n;

При каждом поднятии титановой руды пишите:
\c;\s;	countTit = countTit + 1\n;

В выборе имени для переменной у вас есть довольно много возможностей, вы можете называть их как угодно, например: \c;dist\n;, \c;direct\n;, \c;p2\n;, \c;a\n;, \c;x\n;, \c;nothing_2_shoot_at\n; и так далее.
Имя всегда должно начинаться с латинской буквы. За ней может следовать любая комбинация латинских букв, символов или символа подчеркивания \c;_\n;. Вы конечно не можете использовать для их названий ключевые слова языка CBOT, как например \c;\l;for\u cbot\for;\n;, \c;\l;while\u cbot\while;\n;, \c;\l;break\u cbot\break;\n;, \c;\l;continue\u cbot\continue;\n;, \c;do\n; и так далее.
При выборе имен для переменных вы должны быть осторожны; написание программы может стать очень сложным, если вы забудете имена переменных или если вы не сможете вспомнить для чего они используются. Разработайте свою собственную систему для придумывания имен переменных, но не используйте такие имена как \c;Bmo45\n;, \c;a\n; или \c;tgBinX\n;.

В приведенном выше примере ключевое слово \c;int\n; показывает, что эта переменная может содержать только целые числа, которые соответствуют подсчитываемым объектам. Если вы хотите измерить расстояние, то лучше используйте переменную, которая может содержать и дробные числа с дробной частью (например 3.45 или 0.034): в этом случае используйте тип \c;float\n;.

Фактически переменная состоит из трех частей:
1) имени
2) типа хранимой в ней информации
3) и содержимого, то есть самой информации

\t;имя
Имя вам нужно для того, чтобы различать разнообразные переменные.

\t;тип
\l;Тип\u cbot\type; определяет какой вид информации может содержать переменная. В зависимости от типа переменная может содержать целое число, дробное число, строку, координаты точки, информацию об объекте и так далее.
Вот список наиболее часто используемых типов переменных:
  o  \c;\l;int\u cbot\int;\n; для целого числа (12, -500 и так далее.)
  o  \c;\l;float\u cbot\float;\n; для дробного числа (3.14, 0.2, -99.98 и так далее.)
  o  \c;\l;string\u cbot\string;\n; для строки символов ("Привет!", "Объект не найден" и так далее.)
  o  \c;\l;point\u cbot\point;\n; для x,y и z-координат в пространстве
  o  \c;\l;object\u cbot\object;\n; для информации об объекте (бот, здание и так далее.)

\t;Содержимое
Содержимое переменной это информация того вида, который определен в типе. Во время выполнения программы оно может меняться.

После того, как вы объявили переменную, она еще не содержит никакого значения. Что вы смогли ее использовать, нужно поместить в нее значение:
\c;\s;	int  i, j;
\s;	j = 25;  // j принимает значение, равное 25
\s;	j = i;   // так писать нельзя, так как i еще ничего не содержит.
\n;
Вы также можете в одной строке одновременно объявить переменную и записать в нее значение, написав:
\c;\s;	int  countTit = 0;
\n;
Когда вы присваиваете значение переменной с помощью знака равенства \c;=\n;, значение с правой стороны копируется в переменную с левой стороны. Изучите следующий пример:
\c;\s;	int  i, j;
\s;	i = 5+2;  // i принимает значение, равное 7
\s;	j = i+6;  // j принимает значение i плюс 6, то есть 13
\s;	i = j;    // i принимает значение j, то есть 13
\n;
В конце этого примера обе переменные \c;i\n; и \c;j\n; содержат значение \c;13\n;.

Последующее присвоение неправильно, так как с левой стороны знака равенства \c;=\n;, может быть только имя переменной:
\c;\s;	i+2 = j;  // невозможно
\n;
Если вы хотите поменять местами значения двух переменных, то вы должны использовать третью переменную. Вот пример обмена содержимого двух переменных, \c;a\n; и \c;b\n; :
\c;\s;	int temp;
\s;	temp = a;  // temp принимает значение a
\s;	a = b;     // содержимое b копируется в a
\s;	b = temp;  // содержимое temp копируется в b
\n;
\t;Смотри также
\l;Программирование\u cbot;, \l;типы\u cbot\type; и \l;категории\u cbot\category;.
